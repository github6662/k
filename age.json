const UA = "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36"
const headers = {
  'Referer': 'https://m.agefans.io/',
  'Origin': 'https://m.agefans.io',
  'User-Agent': UA,
}

const appConfig = {
  ver: 1,
  title: "AGEFans",
  site: "https://m.agefans.io/#/",
  tabs: [{
    name: '最近更新',
    ext: { page: 1 }
  }]
}

// 返回配置
async function getConfig() {
  return jsonify(appConfig)
}

// 获取卡片列表
async function getCards(ext) {
  ext = argsify(ext)
  let page = ext.page || 1
  let cards = []

  const url = `https://m.agefans.io/v2/catalog?genre=all&order=time&page=${page}&size=20`
  const { data } = await $fetch.get(url, { headers })

  argsify(data).videos?.forEach(each => {
    cards.push({
      vod_id: each.id,
      vod_name: each.name,
      vod_pic: each.cover,
      vod_remarks: each.uptodate,
      ext: { url: `https://api.agefans.io/v2/detail/${each.id}` }
    })
  })

  return jsonify({ list: cards, page })
}

// 获取剧集分组
async function getTracks(ext) {
  ext = argsify(ext)
  let groups = []
  const { data } = await $fetch.get(ext.url, { headers })
  const json = argsify(data)

  const playlists = json.video.playlists || {}
  const labels = json.player_label_arr || {}

  for (let key in playlists) {
    if (!key.includes("m3u8")) continue
    let group = { title: labels[key] || key, tracks: [] }
    playlists[key].forEach(each => {
      if (each.length === 2) {
        group.tracks.push({
          name: each[0],
          ext: { url: each[1] }
        })
      }
    })
    if (group.tracks.length) groups.push(group)
  }

  return jsonify({ list: groups })
}
